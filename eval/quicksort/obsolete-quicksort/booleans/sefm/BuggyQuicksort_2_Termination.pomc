/*  Corresponding procedure in C syntax:

	void quicksort (int left,int right)
	{
		int lo,hi,piv;
		if (left >= right) return;
		piv = a[right]; lo = left; hi = right;
		while (lo <= hi) {
			if (a[hi] > piv) {
				hi--;
			} else {
				swap a[lo],a[hi];
				lo++;
			}
		}
		quicksort(left,hi);
		quicksort(lo,right);
	}	

	Ref: Schwoon, Stefan. Model-checking pushdown systems. Diss. Technische Universität München, 2002. 
	Described in: Pontiggia, Francesco. POMC. A model checking tool for operator precedence languages on omega-words. Master’s thesis. Politecnico di Milano, 2021 && Pontiggia F., Chiari M., Pradella M.. Verification of Programs with Exceptions through Operator Precedence Automata, SEFM 2021.

	Abstracted over the array content and the local variable piv.
	
	Abstract Version:

	void quicksort (int left,int right)
	{
		int lo,hi;
		if (left >= right) return;
		lo = left; hi = right;
		while (lo <= hi) {
			if (∗) {
				hi++;
			} else {
				lo--;
			}
		}
		quicksort(left,hi);
		quicksort(lo,right);
	} 

	Considered array of 2 elements, and determined manually all the recursive cases induced by the boolean variables


*/

formulas = 	F (ret And main),	
			XNu (ret And main);


program:
var leftGEQright, loLThi, loEQhi, loEQleft, hiEQright;

main() {
	leftGEQright = false;
	qs2();
}

qs2() {
	if (leftGEQright) {
	} else {
		loEQhi = false;
		loLThi = true;
		loEQleft = true;
		hiEQright = true;
		while (loLThi || loEQhi) { 
			qsif2();
		}

		//recursive calls
		if (loEQleft){
			leftGEQright = true;
			qs2();
			leftGEQright = false;
			qs2();			
		} else {
			if (hiEQright){
				leftGEQright = false;
				qs2();	
				leftGEQright = true;
				qs2();
			} else {}
		}
	}
}

qsif2() {
	if (*) {
		shiftloLEQhi2();
		hiEQright = false;
	} else {
		shiftloLEQhi2();
		loEQleft = false;
	
	}
}


shiftloLEQhi2() {
	if (loEQhi) {
		loEQhi = false;
		loLThi = false;					
	} else {
		loEQhi = true;
		loLThi = false;
	}
}