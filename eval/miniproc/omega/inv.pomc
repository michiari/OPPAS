formulas = G (call && loop --> [loop| i >= 1s8 && 1s8 <= i + k && i + k <= 2s8 ]), // Inv holds at the beginning of each iteration
           XNd (call && loop && [loop| i >= 1s8 && 1s8 <= i + k && i + k <= 2s8 ]), // Inv holds before the loop starts
           G (call && loop && [loop| i < 127s8 ] && [loop| i >= 1s8 && 1s8 <= i + k && i + k <= 2s8 ] --> XNd (call && loop && [loop| i >= 1s8 && 1s8 <= i + k && i + k <= 2s8 ]) || ~(XNd (call && loop))), // {Inv && Guard} Body {Inv}
           G (ret && loop --> ~[loop| i < 127s8 ] && [loop| i >= 1s8 && 1s8 <= i + k && i + k <= 2s8 ]); // Inv holds at the end of the loop, but the guard does not

program:
s8 i, j, k;

main() {
  u1 k_init;
  k_init = *;
  i = 1s8;
  j = 1s8;
  k = k_init;

  loop();
}

loop() {
  i = i + 1s8;
  j = j + k;
  k = k - 1s8;

  if (i < 127s8) {
    loop();
  } else { }
}

/*
 * Iterative version:
 * i = 1s8;
 * j = 1s8;
 * k = 0s8 | 1s8; // Nondeterministic assignment of 0 or 1
 * while (i < 127s8) {
 *   i = i + 1s8;
 *   j = j + k;
 *   k = k - 1s8;
 * }
 */
